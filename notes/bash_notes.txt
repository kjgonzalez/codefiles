= General Tips / Help ======================================
RASPBERRY PI ONLY: check temperature
    /opt/vc/bin/vcgencmd measure_temp

clone into repo using ssh (rsa)
    1. copy in rsa key
    2. git clone git@github.com:EXAMPLE/REPO.git
    3. DONE

create bash function / variables:
    argexample(){
      # show how to give input arguments with bash as well as variables
      greet="hey" # NO SPACES ON EITHER SIDE OF EQUAL SIGN!!!
      echo "$greet, you've asked me to say $1"
    }

list subfolder / files size, and give in order:
    du -hs * | sort -h -r
    (list summary of human-readable disk usage for all items in folder, and 
        sort by -h flag in reverse order (largest-first)

use screen to safely run commands in ssh connection:
    start:    screen -S <name>
    detach:   CTRL+a,d
    reattach: screen -r <pid_OR_name>
    kill:     screen -X -S <pid_OR_name> quit (or 'exit' while inside)
    enable scroll: 
        1. vim ~/.screenrc
        2. # Enable mouse scrolling and scroll bar history scrolling
           termcapinfo xterm* ti@:te@
        3. ESC >> :x >> ENTER

remove file/folder from git without actually deleting (stop tracking):
    1. add file to .gitignore file
    2. git rm --cached FILE  |or| git rm --cached -r FOLDER
    3. (add/commit/push as usual)

quick targz flag help:
    c: create archive
    f: to file (need filename)
    t: list contents
    v: be verbose (while listing)
    x: extract archive
    z: use gzip during operation

append a path to linux PATH variable (esp. for .bashrc file)
    NOTE: put this either in .bashrc or .profile ("more" permanent & widespread)
    export PATH="$PATH:some/new/path"

update, upgrade, etc:
https://unix.stackexchange.com/questions/361814/whats-the-difference-between-software-update-and-upgrade
* apt-get update: updates LIST of available packages, version etc.
* apt-get upgrade: upgrades PACKAGES on personal computer (depends on update)



how to know an ssh server is running (hint: they usually are)
    ps -A | grep sshd

================================================================================
Rasberry Pi-Specific
enable certain functionalities  sudo raspi-config
list available i2c devices      i2cdetect # install i2c-tools
set python3 as the default      sudo update-alternatives --install $(which python) python $(readlink -f $(which python3)) 3

================================================================================
MAGIC COMMAND TO RUN THINGS IN CRONTAB (EXAMPLE)
@reboot sleep 1 && screen -d -S octoprint -m /home/pi/programs/octoprint/OctoPrint/bin/octoprint serve


================================================================================
DEAL WITH SCREEN PROGRAM DIRECTLY
create new socket    screen -S socketName
reattach to socket   screen -r socketName
get list of sockets  screen -ls 
detach from socket   CTRL+A,D
delete a socket      (connect to socket), "exit"


================================================================================
Quick Commands for Bash / shell
search for a string in certain files    grep "SomeText" *.*
make a program executable               sudo chmod +x filename
force restart from the command line     sudo shutdown -r now
list all files plus filesizes           ls -sh1S # size,humanreadable,1col,sort
check cron                              crontab -e
show current system time                date
delete a folder and all files inside    rm -r /path/to/dir/
create a pause in a shell script        sleep N (N seconds)
run two commands on one line            Command1 && Command2

find text in files: --- grep -r 'TextToMatch' Directory/To/Search
zip a file:             zip -r filename.zip DirectoryName
unzip a file: --------- unzip filename.zip
targz a file:           tar cvzf filename.tar.gz DirectoryName
untargz a file: ------- tar xvzf filename.tar.gz
install *deb file:      sudo dpkg -i FileName.deb
delete folder w/ stuff: rm -r DirName
delete a line in vim:   dd (while not in insert mode)
generate rsa_id: ------ ssh-keygen (don't make password, just install in ~/.ssh/id_rsa)
create a symlink:       ln -s TargetPath NewLinkName
copy entire folder: --- cp -r /pathTo/FOLDER /remote/destination/
print to screen & file: ./somecommand | tee the/output/file.txt
move entire folder: --- mv /path/to/FOLDER /remote/destination/
explicit pip call:      python -m pip install PackageName
read out targz file: -- tar -tf filename.tar.gz (add "v" for verbose output)
use autopep8:           autopep8 path/to/file.py --select=E101,E121 --in-place
see command content: -- type <nameOfCommand> (e.g. "alias aserver")
reverse search in bash  CTRL+R, type <desired text>
list all aliases        alias
