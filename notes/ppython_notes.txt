1. what's a way to look up all available modules???
>> maybe just searching through folders? >> ACTUALLY: "help('modules')"
idea 1: 
>> help('modules')
* note: outputs a multi-column list of names. bit of a hassle, but simple and reliable.

- - - - - - - - - - - - -
How to use Pip: 
Basic usage
Standard packaging tools are all designed to be used from the command line. The
    following command will install the latest version of a module and its 
    dependencies from the Python Packaging Index:
typical:   python -m pip install SomePackage --user
alternate: pip install SomePackage --user
update pip: python -m pip install --upgrade pip

- - - - - - - - - - - - -
List comprehension in python (see list_comprehension.py)
>>> x=range(1,6)
>>> x
[1, 2, 3, 4, 5]
>>> y=[i**2 for i in x]
>>> y
[1, 4, 9, 16, 25]

- - - - - - - - - - - - -
How Jupyter works
"web application that allows a user to run live code, embed visualizations, and 
	provide explantaory text all in one place"
NOTE: jupyter is another name for ipython notebook
look like a webpage, but actually 3 components: live code, output results and 
	visualization, and rich-text formatting & media embedding

in order to run, a command would look like so: 
	cd DesiredFolder
	jupyter notebook object_detectiontutorial.ipynb
you're also able to see an intermediate state of data, meaning you can do a sort
	of helpful debugging

- - - - - - - - - - - - -
Quick note about making a print table in python (using pandas)

In [38]: body=np.array(np.round(np.random.rand(3,3)*5,2),dtype=object)
In [39]: head='one two three'.split(' ')
In [40]: rownames=['a','b','c']
In [41]: pd.DataFrame(data=body,columns=head,index=rownames)
Out[41]: 
    one   two three
a  0.52  3.97  0.43
b  0.68  4.54  4.19
c  4.16  1.73  4.54

- - - - - - - - - - - - -
Fix python indentation (only) to PEP8:
>> autopep8 path/to/file.py --select=E101,E121 --in-place

- - - - - - - - - - - - -
Updating available fonts manually for matplotlib (and ubuntu overall)
  mkdir ~/.fonts
  cd ~/.fonts
  cp ~/path/to/font.ttf .
  fc-cache -f -v
  ipython
  import matplotlib.font_manager as fm
  fm._rebuild()
  exit
  <done>

(in code)
font = {'fontname':'Bahianita','fontsize':15}
plt.plot(x,y)
plt.title('hello',**font)
- - - - - - - - - - - - -
Create & activate virtual environment

  python3 -m venv /path/to/new/virtual/environment
  <venv>\Scripts\Activate.ps1 # platform-specific (https://docs.python.org/3/library/venv.html)


- - - - - - - - - - - - -
list all installed packages and versions
  pip freeze

- - - - - - - - - - - - -
install packages in a requirements file
pip install -r requirements.txt

- - - - - - - - - - - - -
use pip with proxy
  pip install SomePackage --proxy 199.19.250.205:80


